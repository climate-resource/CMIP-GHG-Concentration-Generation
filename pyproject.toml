[tool.poetry]
name = "local"
version = "0.1.0"
description = "Local code to support running the notebooks"
authors = [
    "Zebedee Nicholls <zebedee.nicholls@climate-resource.com>",
    "Jared Lewis <jared.lewis@climate-resource.com>",
]
readme = "README.md"
packages = [{ include = "local", from = "src" }]
license = "BSD-3-Clause"

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
notebook = "7.1.0"
pooch = "1.8.0"
geopandas = "0.14.3"
seaborn = "0.13.2"
bokeh = "3.3.4"
scmdata = "0.17.0"
openpyxl = "3.1.2"
scipy = "1.12.0"
cf-xarray = "0.9.0"
xarray = "2024.1.1"
pint-xarray = "0.3"
nc-time-axis = "1.4.1"
netcdf4 = "1.6.5"
input4mips-validation = "0.3.4"
pydoit-nb = "0.3.4"
carpet-concentrations = "0.5.1"
beautifulsoup4 = "4.12.3"
ipywidgets = "^8.1.2"
primap2 = "^0.10.0"
mpsplines = {git = "https://github.com/jararias/mpsplines.git"}

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.5.0"
mypy = "^1.7.0"
pandas-stubs = "^2.1.1.230928"
types-tqdm = "^4.66.0.5"
towncrier = "^23.11.0"
types-beautifulsoup4 = "^4.12.0.20240106"

[tool.poetry.group.tests.dependencies]
pytest = "^7.4.3"
pytest-regressions = {extras = ["dataframe"], version = "^2.5.0"}

[tool.poetry.group.coverage.dependencies]
coverage = "^7.3.2"
pytest-cov = "^4.1.0"

[tool.jupytext]
formats = "ipynb,py:percent"

[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    "coverage_breaker: marks tests as a coverage breaker (normally because running the test installs things in other venvs which confuses pytest-cov as far as we can tell)"
]

[tool.ruff]
src = ["src"]
exclude = ["notebooks-archive/*"]
target-version = "py311"
select = [
    "E",  # pycodestyle error
    "W",  # pycodestyle warning
    "F",  # pyflakes
    "I",  # isort
    "D",  # pydocstyle
    "PL",  # pylint
    "TRY",  # tryceratops
    "NPY",  # numpy rules
    "RUF",  # ruff specifics
    "UP",  # pyupgrade
    "S",  # flake8-bandit
    # pandas support via pandas-vet. In some cases we will want to disable
    # this because it can lead to too many false positives.
    "PD",
]
unfixable = [
    "PD002",  # Disable autofix for inplace as this often introduces bugs
]
ignore = [
    "D200",  # One-line docstring should fit on one line with quotes
    "D400",  # First line should end with a period
    "PD003", # False positives when using xarray
    "PD010", # `.pivot_table` is preferred to `.pivot` or `.unstack`; provides same functionality
    "PD013", # False positives when using xarray
]
# Provide some leeway for long docstring, this is otherwise handled by black
line-length = 110

[tool.ruff.per-file-ignores]
"notebooks/*" = [
    "D100",  # Missing docstring in public module
    "E402",  # Module level import not at top of file
    "E501",  # Line too long (false failure on comments coming from markdown cells)
    "S101",  # Use of `assert` detected
    "PD011", # False positives when using scmdata
]
"stubs/*" = [
    "D100",  # Missing docstring in public module
    "D103",  # Missing docstring in public function
    "PLR0913",  # Too many arguments
]
"tests/*" = [
    "D103",  # Missing docstring in public function
    "S101",  # Use of assert detected
]

[tool.ruff.isort]
known-first-party = ["src"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.mypy]
strict = true
# show error codes on failure with context
show_error_codes = true
show_error_context = true
# warn if code can't be reached
warn_unreachable = true
# importing following uses default settings
follow_imports = "normal"

[tool.towncrier]
package = "local"
package_dir = "src"
filename = "docs/source/changelog.md"
directory = "changelog/"
title_format = "## CMIP Greenhouse Gas Concentration Generation {version} ({project_date})"
underlines = ["", "", ""]
issue_format = "[#{issue}](https://github.com/climate-resource/CMIP-GHG-Concentration-Generation/pulls/{issue})"

  [[tool.towncrier.type]]
  directory = "breaking"
  name = "Breaking Changes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "deprecation"
  name = "Deprecations"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "feature"
  name = "Features"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "improvement"
  name = "Improvements"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "fix"
  name = "Bug Fixes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "docs"
  name = "Improved Documentation"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "trivial"
  name = "Trivial/Internal Changes"
  showcontent = false

[tool.coverage.report]
fail_under = 80
skip_empty = true
show_missing = true
# Regexes for lines to exclude from consideration in addition to the defaults
exclude_also = [
    # Don't complain about missing type checking code:
    "if TYPE_CHECKING",
    "@overload",
]
