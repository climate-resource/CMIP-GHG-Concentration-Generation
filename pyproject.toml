[tool.poetry]
name = "local"
version = "0.1.0"
description = "Local code to support running the notebooks"
authors = [
    "Zebedee Nicholls <zebedee.nicholls@climate-resource.com>",
    "Jared Lewis <jared.lewis@climate-resource.com>",
]
readme = "README.md"
packages = [{ include = "local", from = "src" }]
license = "BSD-3-Clause"

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
notebook = "^7.0.6"
doit = "^0.36.0"
attrs = "^23.1.0"
cattrs = "^23.1.2"
jupytext = "^1.15.2"
papermill = "^2.4.0"
numpy = "^1.26.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.5.0"
mypy = "^1.6.1"

[tool.jupytext]
formats = "ipynb,py:percent"

[tool.ruff]
src = ["src"]
target-version = "py311"
select = [
    "E",  # pycodestyle error
    "W",  # pycodestyle warning
    "F",  # pyflakes
    "I",  # isort
    "D",  # pydocstyle
    "PL",  # pylint
    "TRY",  # tryceratops
    "NPY",  # numpy rules
    "RUF",  # ruff specifics
    "UP",  # pyupgrade
    "S",  # flake8-bandit
    # pandas support via pandas-vet. In some cases we will want to disable
    # this because it can lead to too many false positives.
    "PD",
]
unfixable = [
    "PD002",  # Disable autofix for inplace as this often introduces bugs
]
ignore = [
    "D200",  # One-line docstring should fit on one line with quotes
    "D400",  # First line should end with a period
]
# Provide some leeway for long docstring, this is otherwise handled by black
line-length = 110

[tool.ruff.per-file-ignores]
"notebooks/*" = [
    "D100",  # Missing docstring in public module
    "E402",  # Module level import not at top of file
    "E501",  # Line too long (false failure on comments coming from markdown cells)
    "S101",  # Use of `assert` detected
    "PD010", # `.pivot_table` is preferred to `.pivot` or `.unstack`; provides same functionality
    "PD011", # False positives when using scmdata
]
"stubs/*" = [
    "D100",  # Missing docstring in public module
    "D103",  # Missing docstring in public function
]

[tool.ruff.isort]
known-first-party = ["src"]

[tool.ruff.pydocstyle]
convention = "numpy"

# TODO Use stricter mypy rules
[tool.mypy]
strict = true
# show error codes on failure with context
show_error_codes = true
show_error_context = true
# warn if code can't be reached
warn_unreachable = true
# importing following uses default settings
follow_imports = "normal"
